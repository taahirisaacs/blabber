{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","concat","users","message","app","initializeApp","database","_ref","type","onClick","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","Navbar_default","sticky","bg","variant","Brand","href","Nav_default","className","activeKey","ROUTES","Item","react_router_dom","to","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","Form_default","Group","controlId","Control","placeholder","Button_default","disabled","block","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","MessageForm","timestamp","Date","getTime","datas","data","dataId","on","snapshot","console","log","forEach","child","val","_this3","messageList","map","dataList","index","Intl","DateTimeFormat","hour","minute","second","year","month","day","format","InputGroup_default","Append","HomePageForm","PasswordChangeForm","PasswordChange","AdminPage","loading","usersObject","usersList","keys","off","Admin_UserList","UserList","components_Navigation","Container_default","Row_default","Col_default","md","span","offset","react_router","exact","path","component","LandingPage","HomePage","AccountPage","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ce90092.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyADOcMXveNYgHVM0fnDmC3356ImbmG37Ec\",\n  authDomain: \"blabber-2fef9.firebaseapp.com\",\n  databaseURL: \"https://blabber-2fef9.firebaseio.com\",\n  projectId: \"blabber-2fef9\",\n  storageBucket: \"blabber-2fef9.appspot.com\",\n  messagingSenderId: \"1043356690661\",\n  appId: \"1:1043356690661:web:5afc6b4602cda087\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  message = uid => this.db.ref('${uid}/messsage');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => (\n  <Navbar sticky=\"top\" bg=\"light\" variant=\"light\">\n    <Navbar.Brand href={ROUTES.LANDING}>Navbar</Navbar.Brand>\n    <Nav className=\"justify-content-end\" activeKey={ROUTES.HOME}>\n      <Nav.Item>\n        <Link to={ROUTES.LANDING}>Landing</Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Link to={ROUTES.HOME}>Home</Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Link to={ROUTES.ADMIN}>Admin</Link>\n      </Nav.Item>\n      <Nav.Item>\n        <SignOutButton />\n      </Nav.Item>\n    </Nav>\n  </Navbar>\n);\n\nconst NavigationNonAuth = () => (\n  <Navbar sticky=\"top\" bg=\"light\" variant=\"light\">\n    <Navbar.Brand href={ROUTES.LANDING}>Navbar</Navbar.Brand>\n      <Nav className=\"justify-content-end\" activeKey={ROUTES.HOME}>\n        <Nav.Item>\n          <Link to={ROUTES.LANDING}>Landing</Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n        </Nav.Item>\n      </Nav>\n  </Navbar>\n);\n\nexport default Navigation;\n","import React from 'react';\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n);\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>Sign Up</h1>\n      <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Control\n            name=\"username\"\n            value={username}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Full Name\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Control\n            name=\"email\"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassOne\">\n          <Form.Control\n            name=\"passwordOne\"\n            value={passwordOne}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassTwo\">\n          <Form.Control\n            name=\"passwordTwo\"\n            value={passwordTwo}\n            onChange={this.onChange}\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n          />\n        </Form.Group>\n        <Button variant=\"primary\" disabled={isInvalid} type=\"submit\" block>\n          Sign Up\n        </Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Button from 'react-bootstrap/Button';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>Password Forget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>Login</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"formEmail\">\n          <Form.Control\n            name=\"email\"\n            value={email}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Email Address\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\">\n        <Form.Control\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        </Form.Group>\n        <Button variant=\"primary\" disabled={isInvalid} type=\"submit\" block>\n          Sign In\n        </Button>\n\n        {error && <p>{error.message}</p>}\n      </Form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nimport firebase from 'firebase';\n\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst HomePage = () => (\n  <div>\n    <h1>Home</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </div>\n);\n\nconst INITIAL_STATE = {\n  message: '',\n  error: null,\n};\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n    this.state = {\n      datas: '',\n      data: [],\n      dataId: [],\n    };\n  }\n\n  onSubmit = event => {\n    const { message } = this.state;\n    const user = firebase.auth().currentUser;\n    const date = new Date();\n    const timestamp = date.getTime();\n\n      firebase.database().ref('messages/users/' + user.uid).push({\n          message,\n          timestamp\n        })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        firebase.database().ref('messages/users/' + user.uid) //reference uid of logged in user like so\n            .on('value', (snapshot) => {\n              console.log(snapshot);\n              snapshot.forEach(child =>{\n                  this.setState({\n                    dataId: this.state.dataId.concat([child.val().timestamp]),\n                    data: this.state.data.concat([child.val().message])\n                  })\n              });\n            })\n      }\n   });\n  }\n\n  render() {\n\n    const {\n      message,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      message === '';\n\n    const messageList = this.state.dataId.map((dataList, index) =>\n\n        <li className=\"messages\">\n          <p>{this.state.data[index]}</p>\n             <span className=\"timestamp\">\n               {new Intl.DateTimeFormat('en-GB', {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                year: 'numeric',\n                month: 'long',\n                day: '2-digit'\n              }).format(dataList)}\n            </span>\n        </li>\n     );\n\n    return (\n      <div>\n      <ul>{messageList}</ul>\n      <Form className=\"FormInput\" onSubmit={this.onSubmit}>\n        <InputGroup controlId=\"formMessage\">\n          <Form.Control\n            name=\"message\"\n            value={message}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Write a blab...\"\n          />\n        <InputGroup.Append>\n          <Button variant=\"primary\" disabled={isInvalid} type=\"submit\" block>\n            Blabber\n          </Button>\n        </InputGroup.Append>\n        </InputGroup>\n        {error && <p>{error.message}</p>}\n      </Form>\n    </div>\n    );\n  }\n}\n\nconst HomePageForm = compose(\n  withRouter,\n  withFirebase,\n)(MessageForm);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePageForm, HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n        <div>\n          <h1>Account: {authUser.email}</h1>\n          <PasswordForgetForm />\n          <PasswordChangeForm />\n        </div>\n      )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);\n","import React, { Component } from 'react';\n\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n     this.setState({ loading: true });\n\n     this.props.firebase.users().on('value', snapshot => {\n       const usersObject = snapshot.val();\n\n       const usersList = Object.keys(usersObject).map(key => ({\n         ...usersObject[key],\n         uid: key,\n       }));\n\n       this.setState({\n         users: usersList,\n         loading: false,\n       });\n     });\n   }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        {loading && <div>Loading ...</div>}\n\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AdminPage);\n","import React from 'react';\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\n\nimport '../bootstrap.min.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Nav from 'react-bootstrap/Nav'\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nconst App = () => (\n      <Router>\n        <Navigation />\n        <Container >\n          <Row>\n            <Col md={{ span: 8, offset: 2 }}>\n                <Route exact path={ROUTES.LANDING} component={LandingPage} />\n                <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n                <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n                <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n                <Route path={ROUTES.HOME} component={HomePage} />\n                <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n                <Route path={ROUTES.ADMIN} component={AdminPage} />\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}